I"$<h2 id="project-initiation--web-setup">Project Initiation &amp; Web Setup</h2>

<p>Iâ€™ve successfully set up my website as specified by the project requirements. The live site is hosted on a custom webserver, and all source files are available on <a href="http://github.com/selvack/ada525/">GitHub</a>.</p>

<h3 id="setting-up-the-development-environment-on-mac">Setting Up the Development Environment on Mac</h3>
<p>Follow the steps below:</p>

<ol>
  <li>Install Homebrew:
    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>/bin/bash <span class="nt">-c</span> <span class="s2">"</span><span class="si">$(</span>curl <span class="nt">-fsSL</span> https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh<span class="si">)</span><span class="s2">"</span>
</code></pre></div>    </div>
  </li>
  <li>Install dependencies:
    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code> brew <span class="nb">install </span>chruby ruby-install xz
 ruby-install ruby
</code></pre></div>    </div>
  </li>
  <li>Configure chruby in ~/.zshrc:
    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code> <span class="nb">echo</span> <span class="s2">"source </span><span class="si">$(</span>brew <span class="nt">--prefix</span><span class="si">)</span><span class="s2">/opt/chruby/share/chruby/chruby.sh"</span> <span class="o">&gt;&gt;</span> ~/.zshrc
 <span class="nb">echo</span> <span class="s2">"source </span><span class="si">$(</span>brew <span class="nt">--prefix</span><span class="si">)</span><span class="s2">/opt/chruby/share/chruby/auto.sh"</span> <span class="o">&gt;&gt;</span> ~/.zshrc
 <span class="nb">echo</span> <span class="s2">"chruby ruby-3.1.3"</span> <span class="o">&gt;&gt;</span> ~/.zshrc  <span class="c"># Replace with the current version after running 'chruby'.</span>
</code></pre></div>    </div>
  </li>
  <li>Restart the terminal, then:
    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code> ruby <span class="nt">-v</span>  <span class="c"># To confirm the version.</span>
 gem <span class="nb">install </span>jekyll
</code></pre></div>    </div>
  </li>
</ol>

<p>5For this project, I opted to use a Jekyll template named <a href="http://github.com/selvack/ada525/">Klise</a>, available on their theme catalog. To utilize the theme:</p>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>git clone https://github.com/piharpi/jekyll-klise.git
bundle <span class="nb">install
</span>bundle <span class="nb">exec </span>jekyll serve
</code></pre></div></div>

<p>For this project I chose to use a jekyll template called <a href="http://github.com/selvack/ada525/">Klise</a> which can be found on their theme catalog. To use the theme</p>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>git clone https://github.com/piharpi/jekyll-klise.git
bundle <span class="nb">install
</span>bundle <span class="nb">exec </span>jekyll serve
</code></pre></div></div>
<p>Now the webserver should be running locally on <a href="127.0.0.1:4000">127.0.0.1:4000</a> or <a href="localhost:4000">localhost:4000</a></p>

<p>Then i opened the folder in Visual Studio Code and edited the necessery files and from the console.
Jekyll uses <a href="https://daringfireball.net/projects/markdown/">Markdown</a> as editing language for text-html compiler.</p>

<p>Once executed, the web server should be accessible locally via <a href="http://127.0.0.1:4000">127.0.0.1:4000</a> or <a href="http://localhost:4000">localhost:4000</a>.</p>

<p>Subsequently, I opened the project folder in <strong>Visual Studio Code</strong> to modify the required files. Note: Jekyll employs <a href="https://daringfireball.net/projects/markdown/">Markdown</a> as its text-to-HTML editing language.</p>

<p><strong>For version control and deployment</strong>, the following commands were used:</p>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>git init
git add <span class="nb">.</span> 
git commit <span class="nt">-m</span> <span class="s2">"Initial commit"</span>
git remote add origin https://github.com/selvack/ada525.git
git push origin main
</code></pre></div></div>

<h1 id="my-final-project-outline">My Final project outline</h1>
<p>For my final project, I intend to develop a laser gun game. The concept involves shooting lasers at target figures, designed to resemble infantry soldiers. Every successful hit will register and display a score on an integrated screen. The core of this project will likely be built around an Arduino circuit.</p>

<p><img src="https://i.ibb.co/2WJz1GN/Skjermbilde-2023-08-28-111433.png" alt="Project Outline" title="Laser Gun Game" /></p>

<h2 id="undecided-factors-per-now">Undecided factors per now</h2>
<h2 id="final-project-laser-gun-game-considerations">Final Project: Laser Gun Game Considerations</h2>

<p>Several aspects of the project remain undecided as of now. These factors will be determined as the project progresses. Below is a summary of these considerations:</p>

<ul>
  <li><strong>Targets (Toy soldiers or images)</strong>
    <ul>
      <li>The targets should ideally have some mobility. Perhaps a stepper motor could be used to knock them down upon a successful hit?</li>
    </ul>
  </li>
  <li><strong>Laser</strong>
    <ul>
      <li>What kind of Laser? A regular standalone laserpointer or PCB-laser unit and develop a seperate userside kit?</li>
    </ul>
  </li>
  <li><strong>Display</strong>
    <ul>
      <li>Should we use an LCD display or a segment display to tally the scores?</li>
    </ul>
  </li>
  <li><strong>Sound</strong>
    <ul>
      <li>Is there a need to integrate sound effects or any audio feedback?</li>
    </ul>
  </li>
  <li><strong>CAD Model for the 3D Gun</strong>
    <ul>
      <li>No specific gun design has been finalized. Opting for a simple design, such as modifying an existing gun model, might expedite the development process.</li>
    </ul>
  </li>
</ul>

:ET