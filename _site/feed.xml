<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-US"><generator uri="https://jekyllrb.com/" version="4.1.1">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" hreflang="en-US" /><updated>2023-08-28T20:32:59+02:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">ADA525  - Selva Kumar</title><subtitle>Webpage to contain necesary information and sourcefiles for the subject ADA525 @ HVL.</subtitle><author><name>Selva Kumar</name><email>selva.kumar@live.no</email></author><entry><title type="html">Assignment 00: Plan and Sketch</title><link href="http://localhost:4000/00_Plan/" rel="alternate" type="text/html" title="Assignment 00: Plan and Sketch" /><published>2023-08-28T10:29:20+02:00</published><updated>2023-08-28T10:29:20+02:00</updated><id>http://localhost:4000/00_Plan</id><content type="html" xml:base="http://localhost:4000/00_Plan/"><![CDATA[<h2 id="project-initiation--web-setup">Project Initiation &amp; Web Setup</h2>

<p>I’ve successfully set up my website as specified by the project requirements. The live site is hosted on a custom webserver, and all source files are available on <a href="http://github.com/selvack/ada525/">GitHub</a>.</p>

<h3 id="setting-up-the-development-environment-on-mac">Setting Up the Development Environment on Mac</h3>
<p>Follow the steps below:</p>

<ol>
  <li>Install Homebrew:
    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>/bin/bash <span class="nt">-c</span> <span class="s2">"</span><span class="si">$(</span>curl <span class="nt">-fsSL</span> https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh<span class="si">)</span><span class="s2">"</span>
</code></pre></div>    </div>
  </li>
  <li>Install dependencies:
    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code> brew <span class="nb">install </span>chruby ruby-install xz
 ruby-install ruby
</code></pre></div>    </div>
  </li>
  <li>Configure chruby in ~/.zshrc:
    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code> <span class="nb">echo</span> <span class="s2">"source </span><span class="si">$(</span>brew <span class="nt">--prefix</span><span class="si">)</span><span class="s2">/opt/chruby/share/chruby/chruby.sh"</span> <span class="o">&gt;&gt;</span> ~/.zshrc
 <span class="nb">echo</span> <span class="s2">"source </span><span class="si">$(</span>brew <span class="nt">--prefix</span><span class="si">)</span><span class="s2">/opt/chruby/share/chruby/auto.sh"</span> <span class="o">&gt;&gt;</span> ~/.zshrc
 <span class="nb">echo</span> <span class="s2">"chruby ruby-3.1.3"</span> <span class="o">&gt;&gt;</span> ~/.zshrc  <span class="c"># Replace with the current version after running 'chruby'.</span>
</code></pre></div>    </div>
  </li>
  <li>Restart the terminal, then:
    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code> ruby <span class="nt">-v</span>  <span class="c"># To confirm the version.</span>
 gem <span class="nb">install </span>jekyll
</code></pre></div>    </div>
  </li>
</ol>

<h2 id="project-theme--setup">Project Theme &amp; Setup</h2>
<ol>
  <li>I used the <a href="https://github.com/piharpi/jekyll-klise">Klise</a>, a jekyll template for this project. To set it up:
    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>git clone https://github.com/piharpi/jekyll-klise.git
bundle <span class="nb">install
</span>bundle <span class="nb">exec </span>jekyll serve
</code></pre></div>    </div>
  </li>
  <li>
    <p>Access the local server via <a href="127.0.0.1:4000">127.0.0.1:4000</a> or <a href="localhost:4000">localhost:4000</a>.</p>
  </li>
  <li>Edit the necessary files using <strong>Visual Studio Code</strong>. Note: Jekyll uses <a href="https://www.markdownguide.org/tools/jekyll/">Markdown</a> for text-to-HTML conversion.</li>
</ol>

<h2 id="deploying-to-github">Deploying to GitHub</h2>
<p>Use these commands to push your local content to GitHub:</p>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>git init
git add <span class="nb">.</span> 
git commit <span class="nt">-m</span> <span class="s2">"Initial commit"</span>
git remote add origin https://github.com/selvack/ada525.git
git push origin main
</code></pre></div></div>

<h1 id="my-final-project-outline">My Final project outline</h1>
<p>For my final project, I intend to develop a laser gun game. The concept involves shooting lasers at target figures, designed to resemble infantry soldiers. Every successful hit will register and display a score on an integrated screen. The core of this project will likely be built around an Arduino circuit.</p>

<p><img src="https://i.ibb.co/2WJz1GN/Skjermbilde-2023-08-28-111433.png" alt="Project Outline" title="Laser Gun Game" /></p>

<h2 id="final-project-undecided-factors">Final Project: Undecided Factors</h2>

<p>As we continue to develop our project, several components remain undecided. Here’s a rundown of these aspects:</p>

<ul>
  <li><strong>Targets (Toy soldiers or Images)</strong>
    <ul>
      <li>The targets might have a movement mechanism.</li>
      <li><em>Thought:</em> Could a stepper motor be utilized to topple them when hit?</li>
    </ul>
  </li>
  <li><strong>Display</strong>
    <ul>
      <li>Choice between an LCD display or a Segment display for point tallying.</li>
    </ul>
  </li>
  <li><strong>Sound</strong>
    <ul>
      <li>Do we want to include sound effects?</li>
    </ul>
  </li>
  <li><strong>CAD Model for the Laser Gun</strong>
    <ul>
      <li>No design has been finalized for the gun.</li>
      <li><em>Strategy:</em> Perhaps modifying an existing gun design would expedite the process?</li>
    </ul>
  </li>
  <li><strong>CAD Model for Infantry Barricades</strong>
    <ul>
      <li>Is there a need for house-like barricades?</li>
      <li><em>Idea:</em> Could we “animate” a door that opens, presenting soldiers to the shooter?</li>
    </ul>
  </li>
  <li><strong>Variety in Soldier Types</strong>
    <ul>
      <li>Should one soldier have a unique rank, serving as a ‘Boss’ character?</li>
      <li><em>Advantage:</em> Hitting this character could yield more points.</li>
    </ul>
  </li>
  <li><strong>2x Arduino in Serial Mode?</strong>
    <ul>
      <li>The Arduino Uno has only 5 IO analog pins. Given that we’re using 4 light-sensitive diodes and need an additional one for serial output to the display, this might pose a challenge.</li>
      <li>To incorporate sound effects, we may need to use two Arduino Unos in tandem. Alternatively, I might find a simpler solution that requires just one Arduino.</li>
    </ul>
  </li>
</ul>]]></content><author><name>Selva Kumar</name><email>selva.kumar@live.no</email></author><category term="jekyll" /><category term="initial" /><summary type="html"><![CDATA[Project Initiation &amp; Web Setup]]></summary></entry></feed>